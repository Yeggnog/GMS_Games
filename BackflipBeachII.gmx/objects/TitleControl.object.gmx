<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>progress = 0;
dummypoints = 0;
alph = 0;
alarmtoggle = 0;
animtemp = 0;
animimg = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// global control variables

// keyboard
globalvar controls_keyboard;
controls_keyboard[0] = ord("A"); // left
controls_keyboard[1] = ord("D"); // right
controls_keyboard[2] = ord("W"); // up
controls_keyboard[3] = ord("S"); // down
controls_keyboard[4] = vk_enter; // confirm
controls_keyboard[5] = vk_backspace // backspace
controls_keyboard[6] = vk_space; // "skip to the end" button
controls_keyboard[7] = vk_control // cancel

// gamepad?
/*
if(gamepad_get_device_count() &gt; 0 &amp;&amp; gamepad_is_connected(0)){
    globalvar controls_gamepad;
    globalvar device_index;
    device_index = 0;
    controls_gamepad[0] = gp_stickl &amp;&amp; gp_axislh &lt; -.5; // left
    controls_gamepad[1] = gp_stickl &amp;&amp; gp_axislh &gt; .5; // right
    controls_gamepad[2] = gp_stickl &amp;&amp; gp_axislv &lt; -.5 // up
    controls_gamepad[3] = gp_stickl &amp;&amp; gp_axislv &gt; .5; // down
    controls_gamepad[4] = gamepad_button_check_pressed(0, gp_face1); // confirm
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarmtoggle = 0;
progress ++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//animate title screen
if(animtemp &lt; 4){
    animtemp += 1;
}else{
    animtemp = 0;
    if(animimg &lt; 4){
        animimg += 1;
    }else{
        animimg = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jdfhadfh

fnt = font_add_sprite(sprite13, ord(" "), true, 1);
draw_set_font(fnt);
draw_set_colour_write_enable(24,24,24,1);
//title screen
if(progress = 0){
    if(animimg == 0){
        draw_sprite(sprite9, 6, view_xview[0], view_yview[0]);
    }else{
        draw_sprite(sprite9, 11+animimg, view_xview[0], view_yview[0]);
    }
    if(keyboard_check_pressed(vk_enter)){
        if(alarmtoggle = 0){
        alarmtoggle = 1;
        alarm[0] = 10;
        }
    }
}
//GET READY! screen
if(progress = 1){
    draw_sprite(sprite9, 3, view_xview[0], view_yview[0]);
    if(alarmtoggle = 0){
        alarmtoggle = 1;
        alarm[0] = 120;
    }
}
//go to the game
if(progress = 2){
    room_goto(room1);
}
font_delete(fnt);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
