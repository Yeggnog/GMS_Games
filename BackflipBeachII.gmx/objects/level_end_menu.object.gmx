<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///It's a create event. Move along.
progress = 0;
dummypoints = 0;
xval = 160;
screenxval = 160;
entertoggle = true;
counting = false;
instance_deactivate_object(generator);
//alph = 0;
//alarmtoggle = 0;

/*
progress 0: slow BG and beach appearance
progress 1: lerp dummypoints
progress 2: screen swap in
progress 3: name entry
progress 4: high score screen
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//enter pressed
if(keyboard_check_pressed(controls_keyboard[4]) &amp;&amp; entertoggle = true){
    entertoggle = false;
    //go to title screen
    if(progress = 4){
        room_goto(room2);
    }
    if(progress = 1 &amp;&amp; counting = false){
        counting = true;
    }else if(counting = true &amp;&amp; dummypoints &gt;= Surfer.pts){
        progress = 2;
    }
}
if(progress = 0){
    //slow to a stop
    if(xval &gt; 0){
        xval -= 1;
        if(background_hspeed &gt; 1 &amp;&amp; xval &gt; 0){
            background_hspeed -= .01;
        }else if(background_hspeed &gt; 0 &amp;&amp; xval = 0){
            background_hspeed = 0;
            progress = 1;
        }
    }
    if(xval = 0){
        //player sprite update
        Surfer.winning = 1;
        if(Surfer.vp = 0){
            Surfer.sprite_index = sprite17;
        }
    }
}
//score total
if(progress = 1){
    if(counting = true){
        if(dummypoints &lt; Surfer.pts){
            dummypoints += 50;
        }
    }
}
//slide screen in
if(progress = 2){
    if(screenxval &gt; 0){
        screenxval -= 8;
    }else if(Surfer.pts &gt;= 
    HighScoreCounter.highscores[array_height_2d(HighScoreCounter.highscores)-1,1]){
        progress = 3;
        instance_create(10,10,TextInput);
    }else{
        progress = 4;
    }
}
if(entertoggle = false){
    entertoggle = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///I had to rewrite this way too many times

//set up font and such
fnt = font_add_sprite(sprite13, ord(" "), true, 2);
draw_set_font(fnt);
draw_set_colour_write_enable(24,24,24,1);

depth = -6;
//score total screen
if(progress = 1 || progress = 2){
    //draw_sprite(sprite9, 4, view_xview[0], view_yview[0]);
    draw_set_color(c_white);
    draw_set_alpha(0.6);
    draw_rectangle(view_xview[0]+62, view_yview[0]+53, view_xview[0]+113, view_yview[0]+73, false);
    draw_set_alpha(1.0);
    draw_set_colour(make_color_rgb(24,24,24));
    draw_text(view_xview[0]+64, view_yview[0]+55, "TOTAL");
    draw_text(view_xview[0]+64, view_yview[0]+64, dummypoints);
    //test for high score ------ ------ ------ ------ ------ ------ ------ ------ ------
    if(Surfer.pts &gt;= 
    HighScoreCounter.highscores[array_height_2d(HighScoreCounter.highscores)-1,1]){
        draw_text(view_xview[0]+48, view_yview[0]+74, "HIGH SCORE!");
    }
}

//screen sliding in
if(progress &gt;= 2){
    draw_sprite(sprite9, 5, view_xview[0]-screenxval, view_yview[0]);
}

//high scores screen
if(progress = 4){
    //print array using for loop
    for(i=0; i&lt;array_height_2d(HighScoreCounter.highscores); i++){
        draw_text(view_xview[0]+29, view_yview[0]+(20+(i*10)), HighScoreCounter.highscores[i,0]);
        draw_text(view_xview[0]+84, view_yview[0]+(20+(i*10)), HighScoreCounter.highscores[i,1]);
    }
}
font_delete(fnt);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
