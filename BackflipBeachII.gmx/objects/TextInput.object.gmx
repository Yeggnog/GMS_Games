<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite18</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>txt_input = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var k=keyboard_lastkey;
var c=keyboard_lastchar;

if keyboard_check_pressed(vk_anykey)
{
    if (k==controls_keyboard[5])
    {
        // delete last character
        txt_input = string_copy(txt_input, 1, string_length(txt_input)-1 );
    }
    else if (k==controls_keyboard[7])
    {
        level_end_menu.alarmtoggle = 0;
        level_end_menu.progress = 4;
        instance_destroy();
    }
    else if (k==controls_keyboard[4]) and (txt_input!="")
    {
        // enter was pressed and input wasn't empty : do what have to be done here !
        hiScoreUpdate(level_end_menu.dummypoints, txt_input);
        txt_input = "";
        //level_end_menu.alarmtoggle = 0;
        level_end_menu.progress = 4;
        instance_destroy();
    }
    else if k&gt;=65 and k&lt;=90 or k&gt;=97 and k&lt;=122 or k&gt;=48 and k&lt;=57 or k==192 or k==32
    {
        // 65-90  : upcase letters
        // 122-192 : lowercase letters
        // 48-57  : numbers
        // 192   : I don't remember :P
        // 32   : space
        // Add c to txt_input
        txt_input = txt_input + c;
    }
}
txt_input = string_upper(txt_input);
if string_length(txt_input) &gt; 6
   {
   txt_input = string_copy(txt_input, 1, 6);
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite18, 0, (view_wview[0]/2 - sprite_width/2), (view_hview[0]/2 - sprite_height/2));
fnt = font_add_sprite(sprite13, ord(" "), false, 0);
draw_set_font(fnt);
draw_text((view_wview[0]/2 - sprite_width/2)+19, (view_hview[0]/2 - sprite_height/2)+17, string(txt_input));
font_delete(fnt);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
