<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>paused = true;
list[0] = "Continue";
list[1] = "Stats";
list[2] = "Password";
list[3] = "Quit";
locked[0] = false;
locked[1] = false;
locked[2] = false;
locked[3] = true;
list1[0] = "Left:";
list1[1] = "";
list1[2] = "";
list1[3] = "";
list1[4] = "Back";
list2[0] = string_copy(test_password,0,5);
list2[1] = string_copy(test_password,5,5);
list2[2] = string_copy(test_password,10,5);
list2[3] = "00000";
list2[4] = "00000";
list2[5] = "Enter";
buffer = 12;
hbuffer = 7;
voffset = 17;
linewidth = 1;
boxhbuffer = 10;
curs_pos = 0;
curs_col = 0;
progress = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(progress = 0){
    voffset = 17;
    hbuffer = 7;
}
if(progress = 1){
    voffset = 12;
    hbuffer = 7;
}
if(progress = 2){
    voffset = 6;
    hbuffer = 9;
}
//update
list2[0] = string_copy(test_password,0,5);
list2[1] = string_copy(test_password,5,5);
list2[2] = string_copy(test_password,10,5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize font and colors
fnt_menu = font_add_sprite(fnt_large, ord(' '), true, 1);
draw_set_colour(c_white);
draw_set_font(fnt_menu);

if(progress = 0){//normal pause screen
draw_set_color(c_black);
//box
draw_rectangle(view_xview[0]+30,view_yview[0]+8,view_xview[0]+(view_wview[0]-30),view_yview[0]+(view_hview[0]-8),false);
draw_set_color(c_white);
//cursor
draw_line_width(view_xview[0]+31,view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset-2+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+31,view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+31,view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+31,view_yview[0]+(voffset+9+buffer*curs_pos),view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
draw_set_color(c_white);
//options
for(i=0; i&lt;array_length_1d(list); i++){
    //grey out locked options
    if(locked[i] = true){
    draw_set_color(c_gray);
    }else{
    draw_set_color(c_white);
    }
    draw_text(view_xview[0]+33,view_yview[0]+(voffset+buffer*i),list[i]);
    draw_set_color(c_white);
}
}
if(progress = 1){//stat editor
draw_set_color(c_black);
//box
draw_rectangle(view_xview[0]+30,view_yview[0]+8,view_xview[0]+(view_wview[0]-30),view_yview[0]+(view_hview[0]-8),false);
draw_set_color(c_white);
//cursor
draw_line_width(view_xview[0]+31,view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset-2+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+31,view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+31,view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+31,view_yview[0]+(voffset+9+buffer*curs_pos),view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
draw_set_color(c_white);
//options
for(i=0; i&lt;array_length_1d(list1); i++){
    draw_text(view_xview[0]+33,view_yview[0]+(voffset+buffer*i),list1[i]);
    draw_set_color(c_white);
}
draw_text(view_xview[0]+68,view_yview[0]+(voffset),string(free_stat_pts));
//stats
for(i=0; i&lt;array_length_1d(list)-1; i++){
    switch i{
    case 0: draw_text(view_xview[0]+33,view_yview[0]+(voffset+buffer*(i+1)),"Atk\"); break;
    case 1: draw_text(view_xview[0]+33,view_yview[0]+(voffset+buffer*(i+1)),"Chg\"); break;
    case 2: draw_text(view_xview[0]+33,view_yview[0]+(voffset+buffer*(i+1)),"Drn\"); break;
    }
    for(j=0;j&lt;Bust_stats[i];j++){
    draw_text(view_xview[0]+(61+hbuffer*j),view_yview[0]+(voffset+buffer*(i+1)),"@");
    }
    draw_text(view_xview[0]+(61+hbuffer*j)+2,view_yview[0]+(voffset+buffer*(i+1)),"`");
}
}
if(progress = 2){//password entry
draw_set_color(c_black);
//Initialize font and colors
fnt_spaced = font_add_sprite(fnt_large, ord(' '), true, 3);
draw_set_font(fnt_spaced);
//box
draw_rectangle(view_xview[0]+22,view_yview[0]+3,view_xview[0]+(view_wview[0]-22),view_yview[0]+(view_hview[0]-3),false);
draw_set_color(c_white);
//cursor
if(curs_pos != 5){
draw_line_width(view_xview[0]+(37+curs_col*hbuffer),view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+(45+curs_col*hbuffer),view_yview[0]+(voffset-2+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+(37+curs_col*hbuffer),view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+(37+curs_col*hbuffer),view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+(45+curs_col*hbuffer),view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+(45+curs_col*hbuffer),view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+(37+curs_col*hbuffer),view_yview[0]+(voffset+9+buffer*curs_pos),view_xview[0]+(45+curs_col*hbuffer),view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
}
if(curs_pos = 5){
draw_line_width(view_xview[0]+31,view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset-2+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+31,view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+31,view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset-2+buffer*curs_pos),view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
draw_line_width(view_xview[0]+31,view_yview[0]+(voffset+9+buffer*curs_pos),view_xview[0]+(view_wview[0]-32),view_yview[0]+(voffset+9+buffer*curs_pos),linewidth);
}
draw_set_color(c_white);
//options
for(i=0; i&lt;array_length_1d(list2); i++){
    if(i=5){
        draw_set_font(fnt_menu);
    }
    draw_text(view_xview[0]+39,view_yview[0]+(voffset+buffer*i),list2[i]);
    draw_set_color(c_white);
}
//password
for(i=0; i&lt;array_length_1d(list)-1; i++){
    //things go here
}
font_delete(fnt_spaced);
}
//reset
draw_set_color(c_black);
font_delete(fnt_menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(progress = 0){
    if(curs_pos &gt; 0){
    curs_pos -= 1;
    }else{
    curs_pos = array_length_1d(list)-1;
    }
}
if(progress = 1){
    if(curs_pos &gt; 0){
    curs_pos -= 1;
    }else{
    curs_pos = array_length_1d(list1)-1;
    }
}
if(progress = 2){
    var text = real(string_copy(test_password,curs_col+(5*curs_pos),1)); 
    if(text&lt;9){
        test_password = string_replace(test_password,string(text),string(text+1));
    }else{
        test_password = string_replace(test_password,string(text),"0");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(progress = 0){
    if(curs_pos &lt; array_length_1d(list)-1){
    curs_pos += 1;
    }else{
    curs_pos = 0;
    }
}
if(progress = 1){
    if(curs_pos &lt; array_length_1d(list1)-1){
    curs_pos += 1;
    }else{
    curs_pos = 0;
    }
}
if(progress = 2){
    var text = real(string_copy(test_password,curs_col+(5*curs_pos),1));
    if(text&gt;0){
        test_password = string_replace(test_password,string(text),string(text-1));
    }else{
        test_password = string_replace(test_password,string(text),"9");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(progress = 1){
    if(curs_pos != 0 &amp;&amp; curs_pos != 4){
        if(Bust_stats[curs_pos-1] &lt; 3 &amp;&amp; free_stat_pts &gt; 0){
        //add stat
        Bust_stats[curs_pos-1] += 1;
        free_stat_pts -= 1;
        }
    }
}
if(progress = 2){
    if(curs_pos != 5){
        if(curs_col &lt; 4){
        curs_col += 1;
        }else if(curs_pos &lt; 4){
        curs_pos += 1;
        curs_col = 0;
        }else if(curs_pos = 4){
        curs_pos = 5;
        }
    }else{
        curs_pos = 0;
        curs_col = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(progress = 1){
    if(curs_pos != 0 &amp;&amp; curs_pos != 4){
        if(Bust_stats[curs_pos-1] &gt; 0){
        //remove stat
        Bust_stats[curs_pos-1] -= 1;
        free_stat_pts += 1;
        }
    }
}
if(progress = 2){
    if(curs_pos != 5){
        if(curs_col &gt; 0){
        curs_col -= 1;
        }else if(curs_pos &gt; 0){
        curs_pos -= 1;
        curs_col = 4;
        }else if(curs_pos = 0){
        curs_pos = 5;
        }
    }else{
        curs_pos -= 1;
        curs_col = 4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(progress = 0){
    if(curs_pos=0 &amp;&amp; locked[curs_pos]=false){paused = false;instance_destroy();}//unpause
    if(curs_pos=1 &amp;&amp; locked[curs_pos]=false){progress = 1;curs_pos = 0;}//stats
    if(curs_pos=2 &amp;&amp; locked[curs_pos]=false){progress = 2;curs_pos = 0;}//password
    if(curs_pos=3 &amp;&amp; locked[curs_pos]=false){}//quit
}
if(progress = 1){
    switch(curs_pos){
    case 4: progress = 0; curs_pos = 0; break;//back
    }
}
if(progress = 2){
    if(curs_pos = 5){
    curs_pos = 0;
    curs_col = 0;
    progress = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
