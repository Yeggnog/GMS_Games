<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init.exe
/*
shooting = 0;
facing = 0;
hsp = 0;
vesper = 0;
jumpheight = 6;
chargetick = 0;
chargeclock = 0;
hurt = 0;
savedfallmomentum = 0;
bolts = 0;
ActualHP = 3;
DisplayHP = ActualHP;
MAXHP = 3;
maxdrones = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hurt = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shooting</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///grav.exe
/*
//gravity
if(!place_meeting(x,y+self.vesper,object1) &amp;&amp; !place_meeting(x,y+1,object1))
{//1
//change sprite
//normal
if(self.shooting = 0)
{
if(self.facing = 0)
{
sprite_index = sprite15;
}
if(self.facing = 180)
{
sprite_index = sprite16;
}
}
//shooting
if(self.shooting = 1)
{
if(self.facing = 0 &amp;&amp; sprite_index != sprite15)
{
sprite_index = sprite15;
}
if(self.facing = 180 &amp;&amp; sprite_index != sprite16)
{
sprite_index = sprite16;
}
}
//terminal velocity
if(self.vesper &lt; 6)
{
self.vesper += .5;
}
y += self.vesper;
}
else
{
self.savedfallmomentum = self.vesper;
for(i=self.vesper; i&gt;0; i--;){
    if(!place_meeting(x,y+i,object1)){
        y += i;
    }
}
//collision with solid
if(place_meeting(x,y+self.vesper,object1)||place_meeting(x,y+1,object1))
{
self.jumpheight = 6;
//change sprite
if(!keyboard_check(ord("A")) &amp;&amp; !keyboard_check(ord("D"))){
if(self.facing = 0){
sprite_index = sprite0;
}
if(self.facing = 180){
sprite_index = sprite1;
}
}
if(self.vesper &gt; 0){
if(self.savedfallmomentum &gt;= 5){
   part_particles_create(part_system_1, x, y+17, part_type_1, 1); 
}
self.vesper = 0;
}
self.vesper = 0;
}
}
//"push out"
if(place_meeting(x,y+.5,object1))
{
self.vesper = 0;
y -= .5;
}else if(place_meeting(x,y+.1,object1))
{
self.vesper = 0;
y -= .1;
}else if(place_meeting(x,y+.01,object1))
{
self.vesper = 0;
y -= .01;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///charge.exe
/*
//check chargetick value
if(chargetick = 1)
{
if(chargeclock &lt; 5){
chargeclock += .2;
}else{
chargeclock = 5;
}
    if(chargeclock &gt; 1 &amp;&amp; !instance_exists(object17)){
    instance_create(x,y,object17);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sampletext.exe
/*if(ActualHP &lt; DisplayHP){
    DisplayHP -= .05;
}else if(ActualHP &gt; DisplayHP){
    DisplayHP += .05;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="projectile_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//hurt = 1;
//alarm[1] = 25;
/*if(facing = 0){
    if(!place_meeting(x-4, y, object1)){
    x -= 4;
    }
}else if(facing = 180){
    if(!place_meeting(x+4, y, object1)){
    x += 4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///moveright.exe
/*
//reset hsp and facing
hsp = 2;
facing = 0;
image_speed = 1;
if(sprite_index != sprite46)
{
sprite_index = sprite46;
}

//check empty
if(!place_meeting(x+hsp,y,object1)&amp;&amp;!place_meeting(x+hsp,y-2,object1))
{
x += hsp;
}
else
if(hsp &gt; 0 &amp;&amp; hsp &lt; 1)
{
hsp -= .1;
}
else
{
hsp -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///moveleft.exe
/*
//reset hsp and facing
hsp = 2;
facing = 180;
image_speed = 1;
if(sprite_index != sprite47)
{
sprite_index = sprite47;
}

//check empty
if(!place_meeting(x-hsp,y,object1)&amp;&amp;!place_meeting(x-hsp,y-2,object1))
{
x -= hsp;
}
else
if(hsp &gt; 0 &amp;&amp; hsp &lt; 1)
{
hsp -= .1;
}
else
{
hsp -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="58">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///runshootanimupdate.exe
/*
//check image_index
if(image_index = previmg &amp;&amp; (sprite_index = sprite13 || sprite_index = sprite14))
{
if(facing = 0)
{
sprite_index = sprite22;
}
if(facing = 180)
{
sprite_index = sprite23;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///chaeng spriet
/*
if(sprite_index = sprite7)
{
sprite_index = sprite9;
}

if(sprite_index = sprite8)
{
sprite_index = sprite10;
}

if(sprite_index = sprite11)
{
sprite_index = sprite0;
shooting = 0;
}

if(sprite_index = sprite12)
{
sprite_index = sprite1;
shooting = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///end loop
//all sprites 11-18
/*
if(sprite_index = sprite11)
{
image_speed = 0;
}
if(sprite_index = sprite12)
{
sprite_index = sprite23;
}
if(sprite_index = sprite13)
{
sprite_index = sprite22;
}
if(sprite_index = sprite14)
{
image_index = 7;
image_speed = 0;
}
/*
if(sprite_index = sprite15)
{
sprite_index = sprite2;
}
if(sprite_index = sprite16)
{
sprite_index = sprite3;
}
*/
if(sprite_index = sprite17)
{
image_index = 5;
image_speed = 0;
}
if(sprite_index = sprite18)
{
image_index = 5;
image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self
/*
if(hurt = 1){
draw_self();
hurt = 2;
exit;
}else if(hurt = 2){
hurt = 1;
exit;
}else{
draw_self();
}

//reset color
draw_set_color(c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump.exe
/*
//check empty
if(dashing = 1)
{
jumpheight += 1;
}
else
{
jumpheight = 6.5;
}
if(!place_meeting(x,y-jumpheight,object1) &amp;&amp; !place_meeting(x,y-2,object1)  &amp;&amp; place_meeting(x,y+1,object1))
{
y -= 1;
//change sprite
//normal
if(shooting = 0)
{
if(facing = 0)
{
sprite_index = sprite15;
}
if(facing = 180)
{
sprite_index = sprite16;
}
}
//shooting
if(shooting = 1)
{
if(facing = 0)
{
sprite_index = sprite15;
}
if(facing = 180)
{
sprite_index = sprite16;
}
}
vsp = -jumpheight;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ChargeStart.exe
/*
//Begin charge clock
chargetick = 1;
chargeclock = 0;
shooting = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ChargeFire.exe
/*
//End charge clock
chargetick = 0;
shooting = 1;
alarm[0] = 15;

if(instance_exists(object17)){
    with(object17){
        instance_destroy();
    }
}
//determine projectile
/*
charge 0-4 -&gt; regular shot
charge 5+  -&gt; shield
*/

/*
//update sprite
//standing
if(vsp = 0 &amp;&amp; dashing = 0 &amp;&amp; !keyboard_check(ord("A")) &amp;&amp; !keyboard_check(ord("D")))
{
if(facing = 0 &amp;&amp; sprite_index != sprite11)
{
sprite_index = sprite11;
}
//facing left
if(facing = 180 &amp;&amp; sprite_index != sprite12)
{
sprite_index = sprite12;
}
}
//running
if(vsp = 0 &amp;&amp; dashing = 0 &amp;&amp; keyboard_check(ord("A")) || keyboard_check(ord("D")))
{
//facing right
if(facing = 0)
{
previmg = image_index;
if(sprite_index != sprite13)
{
sprite_index = sprite13;
}
image_index = previmg;
}
//facing left
if(facing = 180)
{
previmg = image_index;
if(sprite_index != sprite14)
{
sprite_index = sprite14;
}
image_index = previmg;
}
}*/
/*
//normal shot
if(chargeclock &lt; 5)
{
//facing right
//if(facing = 0 &amp;&amp; instance_number(object2) + instance_number(object3) &lt; 3)
if(facing = 0 &amp;&amp; (instance_number(object15)+instance_number(object3)) &lt; instance_number(object18)+3)
{
//instance_create(x+16, y, object2);
instance_create(x+4, y+11, object15);
}
//facing left
//if(facing = 180 &amp;&amp; instance_number(object2) + instance_number(object3) &lt; 3)
if(facing = 180 &amp;&amp; (instance_number(object15)+instance_number(object3)) &lt; instance_number(object18)+3)
{
//instance_create(x-16, y, object3);
instance_create(x-2, y+11, object3);
}
}

//shield
if(chargeclock &gt;= 5)
{
//facing right
if(facing = 0 &amp;&amp; instance_number(object2) &lt; 1)
{
instance_create(x+16, y, object2);
}
//facing left
if(facing = 180)
{
    if(instance_number(object18) &lt; maxdrones){
        if(instance_number(object8) = 0){
            canonicaldrone = instance_create(x-16, y, object18);
        }else{
            instance_create(x-16, y, object18);
        }
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
