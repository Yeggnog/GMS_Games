<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite33</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>2</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///establish global vars
globalvar shaking;
shaking = false;
globalvar paused;
paused = false;
globalvar test_password;
globalvar boss_HP_actual;
boss_HP_actual = 48;
globalvar boss_HP_display;
boss_HP_display = boss_HP_actual;
globalvar boss_HP_max;
boss_HP_max = 48;
globalvar boss_name;
boss_name = "missingno";
globalvar battling;
battling = false;
globalvar default_proj_speed;
default_proj_speed = 2;
globalvar currentstage;
currentstage = room4;
globalvar cutscene_index;
globalvar current_message;
current_message = "[08] missingno";
load_game(file_index);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STATS
//show_debug_message(test_password);
//buster stats
globalvar free_stat_pts;
free_stat_pts = real(string_copy(test_password,11,1));
globalvar Bust_stats;
Bust_stats[0] = real(string_copy(test_password,8,1)); //attack power added per buster shot
Bust_stats[1] = real(string_copy(test_password,9,1)); //time subtracted from default charge time
Bust_stats[2] = real(string_copy(test_password,10,1)); //number of drones
globalvar bolts;
bolts = real(string_copy(test_password,3,2));
globalvar plot_progress;
plot_progress = real(string_copy(test_password,6,2));
cutscene_index = real(string_copy(test_password,21,2));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set up particle system 1
globalvar part_system_1;
part_system_1 = part_system_create();
part_system_depth(part_system_1, -4);
//set up particle types
//1 (landing dust)
globalvar part_type_1;
part_type_1 = part_type_create();
part_type_sprite(part_type_1, sprite22, true, true, false);
part_type_life(part_type_1, room_speed/4, room_speed/2);
//2 (enemy explosion)
globalvar part_type_2;
part_type_2 = part_type_create();
part_type_sprite(part_type_2, sprite14, true, true, false);
part_type_life(part_type_2, room_speed/4, room_speed/2);
//3 (Smoke)
/*
globalvar part_type_3;
part_type_3 = part_type_create();
part_type_sprite(part_type_3, sprite12, false, true, false);
part_type_life(part_type_3, room_speed, 2*room_speed);
part_type_size(part_type_3, 1, 2, -.1, 0);
part_type_direction(part_type_3, 0, 360, 0, 0);
part_type_speed(part_type_3, 3, 4, -.1, 0);
*/
//4 (Bullet origin)
globalvar part_type_4;
part_type_4 = part_type_create();
part_type_sprite(part_type_4, sprite9, true, true, false);
part_type_life(part_type_4, room_speed/2, room_speed);
//5 (Blue burst)
globalvar part_type_5;
part_type_5 = part_type_create();
part_type_sprite(part_type_5,sprite21,true,true,false);
part_type_life(part_type_5,room_speed/5,room_speed/5);
//6 (Yellow burst)
globalvar part_type_6;
part_type_6 = part_type_create();
part_type_sprite(part_type_6,sprite63,true,true,false);
part_type_life(part_type_6,room_speed/5,room_speed/5);
//7 (Teleport)
globalvar part_type_7;
part_type_7 = part_type_create();
part_type_sprite(part_type_7, sprite12, true, true, false);
part_type_life(part_type_7, room_speed/4, room_speed/2);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set up particle system 2
globalvar part_system_2;
part_system_2 = part_system_create();
part_system_depth(part_system_2, 4);
//set up particle types
//8 (Square)
globalvar part_type_8;
part_type_8 = part_type_create();
part_type_colour_rgb(part_type_8, 101, 101, 219, 219, 239, 239);
part_type_shape(part_type_8, pt_shape_square);
part_type_size(part_type_8, .1, .1, -.02, 0);
part_type_orientation(part_type_8, -40, 40, 10, 0, 1);
part_type_alpha2(part_type_8, 1, 0);
part_type_life(part_type_8, room_speed/4, room_speed/2);
//9 (Smoke)
var col0 = make_color_rgb(255,137,125);
var col1 = make_color_rgb(185,94,81);
globalvar part_type_9;
part_type_9 = part_type_create();
part_type_colour2(part_type_9, col0, col1);
part_type_shape(part_type_9, pt_shape_square);
part_type_size(part_type_9, .2, .25, -.02, 0);
part_type_alpha2(part_type_9, 1, 0);
part_type_orientation(part_type_9, -40, 40, 10, 0, 1);
part_type_direction(part_type_9, 90, 90, 0, 0);
part_type_speed(part_type_9, 1, 2, 0, 0);
part_type_life(part_type_9, room_speed/4, room_speed/2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//update position
if(shaking = false){
    if(instance_exists(Lucca)){
    x = Lucca.x;
    y = Lucca.y;
    }else if(instance_exists(DragonShooter)){
    x = DragonShooter.x;
    y = DragonShooter.y;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
