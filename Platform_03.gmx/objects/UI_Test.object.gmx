<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite43</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw UI

//Initialize font and colors
fnt_debug = font_add_sprite(fnt_normal, ord(' '), true, 1);
draw_set_colour(c_white);
draw_set_font(fnt_debug);

//Health Bar
draw_sprite(sprite_index, 1, view_xview[0]+3, view_yview[0]+(view_hview[0]-11));
draw_sprite(sprite_index, 3, view_xview[0]+3, view_yview[0]+(view_hview[0]-11));
if(instance_exists(Lucca)){
if(Lucca.ActualHP &lt;= Lucca.DisplayHP){
draw_sprite_part(sprite_index, 4, 2, 2, 36*(Lucca.DisplayHP/Lucca.MAXHP), 7, view_xview[0]+4, view_yview[0]+(view_hview[0]-10));
draw_sprite_part(sprite_index, 2, 2, 2, 36*(Lucca.ActualHP/Lucca.MAXHP), 7, view_xview[0]+4, view_yview[0]+(view_hview[0]-10));
}else if(Lucca.ActualHP &gt; Lucca.DisplayHP){
draw_sprite_part(sprite_index, 5, 2, 2, 36*(Lucca.ActualHP/Lucca.MAXHP), 7, view_xview[0]+4, view_yview[0]+(view_hview[0]-10));
draw_sprite_part(sprite_index, 2, 2, 2, 36*(Lucca.DisplayHP/Lucca.MAXHP), 7, view_xview[0]+4, view_yview[0]+(view_hview[0]-10));
}
//Health Counter
draw_text(view_xview[0]+5, view_yview[0]+(view_hview[0]-9), string(Lucca.ActualHP)+"/"+string(Lucca.MAXHP));
}

else if(instance_exists(DragonShooter)){
if(DragonShooter.ActualHP &lt;= DragonShooter.DisplayHP){
draw_sprite_part(sprite_index, 4, 2, 2, 36*(DragonShooter.DisplayHP/DragonShooter.MAXHP), 7, view_xview[0]+4, view_yview[0]+(view_hview[0]-10));
draw_sprite_part(sprite_index, 2, 2, 2, 36*(DragonShooter.ActualHP/DragonShooter.MAXHP), 7, view_xview[0]+4, view_yview[0]+(view_hview[0]-10));
}else if(DragonShooter.ActualHP &gt; DragonShooter.DisplayHP){
draw_sprite_part(sprite_index, 5, 2, 2, 36*(DragonShooter.ActualHP/DragonShooter.MAXHP), 7, view_xview[0]+4, view_yview[0]+(view_hview[0]-10));
draw_sprite_part(sprite_index, 2, 2, 2, 36*(DragonShooter.DisplayHP/DragonShooter.MAXHP), 7, view_xview[0]+4, view_yview[0]+(view_hview[0]-10));
}
//Health Counter
draw_text(view_xview[0]+5, view_yview[0]+(view_hview[0]-9), string(DragonShooter.ActualHP)+"/"+string(DragonShooter.MAXHP));
}

if(battling = true){
//Boss Health Bar
var LenActual = 36*(boss_HP_actual/boss_HP_max);
var LenDisplay = 36*(boss_HP_display/boss_HP_max);
draw_sprite(sprite_index, 1, view_xview[0]+(view_wview[0]-41), view_yview[0]+(view_hview[0]-11));
draw_sprite(sprite_index, 7, view_xview[0]+(view_wview[0]-41), view_yview[0]+(view_hview[0]-11));
if(boss_HP_actual &lt;= boss_HP_display){
draw_sprite_part(sprite_index, 8, 2, 2, LenDisplay, 7, view_xview[0]+(view_wview[0]-(4+LenDisplay)), view_yview[0]+(view_hview[0]-10));
draw_sprite_part(sprite_index, 6, 2, 2, LenActual, 7, view_xview[0]+(view_wview[0]-(4+LenActual)), view_yview[0]+(view_hview[0]-10));
}
//Boss Health Counter
var str = string(boss_HP_actual)+"/"+string(boss_HP_max);
draw_text(view_xview[0]+(view_wview[0]-(4+5*string_length(str))), view_yview[0]+(view_hview[0]-9), str);
draw_set_color(c_black);
draw_text(view_xview[0]+(view_wview[0]-(5*string_length(boss_name))), view_yview[0]+(view_hview[0]-16), boss_name);
draw_set_color(c_white);
draw_text(view_xview[0]+(view_wview[0]-(1+5*string_length(boss_name))), view_yview[0]+(view_hview[0]-17), boss_name);
}
//currency
draw_sprite(sprite23, 0, view_xview[0]+6, view_yview[0]+8);
draw_set_color(c_black);
draw_text(view_xview[0]+12, view_yview[0]+7, string(bolts));
draw_set_color(c_white);
draw_text(view_xview[0]+11, view_yview[0]+6, string(bolts));
//Reset font and colors
font_delete(fnt_debug);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
