<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Dino</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// stats
time[0] = 0; //hours
time[1] = 0; //minutes
time[2] = 0; //seconds?
time[3] = 0; //sub-seconds

timelimit[0] = 24;
timelimit[1] = 59;
timelimit[2] = 59;
timelimit[3] = 30;

vital[0,0] = 15; //food
vital[1,0] = 25; //happy
vital[2,0] = 25; //lonely
vital[3,0] = 25; //awakeness
vital[4,0] = 25; //sass

vital[0,1] = 25; //food max
vital[1,1] = 25; //happy max
vital[2,1] = 25; //lonely max
vital[3,1] = 25; //awakeness max
vital[4,1] = 25; //sass max

vital[0,2] = "Food";
vital[1,2] = "Happy";
vital[2,2] = "Lonely";
vital[3,2] = "Awake"; 
vital[4,2] = "Sass";

vital_delay[0] = 10;
vital_delay[1] = 15;
vital_delay[2] = 20;
vital_delay[3] = 30;
vital_delay[4] = 10;

image_speed = 0;
image_index = irandom_range(0,33);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// time advance
if(time[3] &lt; timelimit[3]){
    time[3] += 1; // sub-seconds
}else if(time[2] &lt; timelimit[2]){
    time[3] = 0;
    time[2] += 1; // seconds
}else if(time[1] &lt; timelimit[1]){
    time[2] = 0;
    time[1] += 1; // minutes
    for(var i=0; i&lt;array_height_2d(vital); i++){
        if(vital[i,0] &gt; 0){
            vital[i,0] -= 1;
        }
    }
}else if(time[0] &lt; timelimit[0]){
    time[1] = 0;
    time[0] += 1; // hours
}else{
    time[0] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*

// set up font
fnt_UI = font_add_sprite(spr_Font,ord('/'),false,-1);
draw_set_font(fnt_UI);

draw_text(4,4,string(time[0])+":"+string(time[1])+":"+string(time[2]));
//draw_text(15,20,"Food: &lt;[/.:ABCDEFGHIJKLMNOPQURSTUVWXYZabcdefghijklmnopqrstuvwxyz;,\]&gt;");

// 7 8 9 then 4 5 6
// 42*i

for(var j=0; j&lt;array_height_2d(vital); j++){
// label
draw_text(15,20+(j*42),vital[j,2]+":");
// 'box'
draw_sprite(spr_UI,7,3,20+(j*42));
if(vital[j,1] &gt; 4){
    for(var i=0; i&lt;vital[j,1]-4; i++){
    draw_sprite_part(spr_UI,8,0,0,3,sprite_get_height(spr_UI),(i*3)+12,20+(j*42));
    }
}
draw_sprite(spr_UI,9,((vital[j,1]-4)*3)+12,20+(j*42));
// bar
if(vital[j,0] &gt; 2){
    draw_sprite(spr_UI,4,6,20+(j*42));
}else if(vital[j,0] &gt; 0){
    draw_sprite_part(spr_UI,4,3,0,3,sprite_get_height(spr_UI),9,20+(j*42));
}
if(vital[j,0] &gt; 4){
    for(var i=1; i&lt;vital[j,0]-3; i++){
    draw_sprite_part(spr_UI,5,0,0,3,sprite_get_height(spr_UI),(i*3)+12,20+(j*42));
    }
}
if(vital[j,0] &gt;= 4){
    draw_sprite(spr_UI,6,((vital[j,0]-4)*3)+12,20+(j*42));
}else if(vital[j,0] &gt; 2){
    draw_sprite_part(spr_UI,6,3,0,3,sprite_get_height(spr_UI),((vital[j,0]-4)*3)+12,20+(j*42));
}
draw_text(15,38+(j*42),string(vital[j,0])+"/"+string(vital[j,1])); // originally 28
}

// clear up font to prevent memory leaks
font_delete(fnt_UI);

*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// pay no attention to the massive amounts of commented shader code

/*shader_set(outline_fixed_again);
var in_Colour = shader_get_uniform(outline_fixed_again, "in_Colour");
var surface_width = shader_get_uniform(outline_fixed_again, "surface_width");
var surface_height = shader_get_uniform(outline_fixed_again, "surface_height");
shader_set_uniform_f(in_Colour, 0.0, 0.0, 0.0, 1.0);
shader_set_uniform_f(surface_width, sprite_get_width(sprite_index));
shader_set_uniform_f(surface_height, sprite_get_height(sprite_index));*/
draw_self();
//shader_reset();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw UI

// set up font
fnt_UI = font_add_sprite(spr_Font,ord('/'),false,-1);
draw_set_font(fnt_UI);

//draw_text(view_xview[0]+4,view_yview[0]+4,string(time[0])+":"+string(time[1])+":"+string(time[2]));
//draw_text(15,20,"Food: &lt;[/.:ABCDEFGHIJKLMNOPQURSTUVWXYZabcdefghijklmnopqrstuvwxyz;,\]&gt;");

// 7 8 9 then 4 5 6
// 42*i

for(var j=0; j&lt;/*array_height_2d(vital)*/1; j++){
// label
//draw_text(view_xview[0]+5,view_yview[0]+8+(j*42),vital[j,2]+":");
// 'box'
draw_sprite(spr_UI,7,view_xview[0]+3,view_yview[0]+8+(j*42));
if(vital[j,1] &gt; 4){
    for(var i=0; i&lt;vital[j,1]-4; i++){
    //draw_sprite_part(spr_UI,8,0,0,3,sprite_get_height(spr_UI),view_xview[0]+(i*3)+4,view_yview[0]+8+(j*42));
    }
}
draw_sprite(spr_UI,9,view_xview[0]+(vital[j,1]-4)+4,view_yview[0]+8+(j*42));
// bar
if(vital[j,0] &gt; 2){
    draw_sprite(spr_UI,4,view_xview[0]+4,view_yview[0]+8+(j*42));
}else if(vital[j,0] &gt; 0){
    draw_sprite_part(spr_UI,4,3,0,1,sprite_get_height(spr_UI),view_xview[0]+3,view_yview[0]+8+(j*42));
}
if(vital[j,0] &gt; 4){
    for(var i=1; i&lt;vital[j,0]-3; i++){
    //draw_sprite_part(spr_UI,5,0,0,3,sprite_get_height(spr_UI),view_xview[0]+(i*3)+4,view_yview[0]+8+(j*42));
    }
}
if(vital[j,0] &gt;= 4){
    draw_sprite(spr_UI,6,view_xview[0]+(vital[j,0]-4)+4,view_yview[0]+8+(j*42));
}else if(vital[j,0] &gt; 2){
    draw_sprite_part(spr_UI,6,3,0,1,sprite_get_height(spr_UI),view_xview[0]+(vital[j,0]-4)+4,view_yview[0]+8+(j*42));
}
draw_text(view_xview[0]+5,view_yview[0]+38+(j*42),string(vital[j,0])+"/"+string(vital[j,1])); // originally 28
}

// clear up font to prevent memory leaks
font_delete(fnt_UI);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
