<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//--------[Object: textBox]--------
// designed to be a variable system to be used for all types of text boxes
// uses sprite spr_textBox = (0[NW] 1[NE] 2[SE] 3[SW] 4[V] 5[H] 6[ ] 7[v] 8[&gt;])
//----[Event: create]----

//variables (width and height in units of 8x8 tiles)
width = 8;
height = 5;
depth = 0;

//constrain the box
// keep from going off the screen
if(width &gt; SCREEN_WIDTH){
    width = SCREEN_WIDTH;
}
if(height &gt; SCREEN_HEIGHT){
    height = SCREEN_HEIGHT;
}
// keep within normal bounds:
// - min width/height for a MessageBox is &lt;3,3&gt;
// - min width/height for an OptionBox is &lt;4,3&gt;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//----[Event: draw]----
//set color
draw_set_color(c_white);
//draw corners
draw_sprite(spr_textBox,0,x,y);
draw_sprite(spr_textBox,3,x,y+(height-1)*8);
draw_sprite(spr_textBox,1,x+(width-1)*8,y);
draw_sprite(spr_textBox,2,x+(width-1)*8,y+(height-1)*8);
//add remaining outline
//if(width &gt; 2){
    for(i=1; i&lt;width-1; i++){
    draw_sprite(spr_textBox,5,x+(i*8),y+(height-1)*8);
    draw_sprite(spr_textBox,6,x+(i*8),y);
    }
    for(i=1; i&lt;height-1; i++){
    draw_sprite(spr_textBox,4,x+(width-1)*8,y+(i*8));
    draw_sprite(spr_textBox,4,x,y+(i*8));
    }
//}
    //draw_sprite(spr_textBox,5,x+8,y);
    //if(width-string_length(title) &gt; 2){
        //for(i=1; i&lt;(width-string_length(title)-1); i++){
        //draw_sprite(spr_textBox,5,x+((i+string_length(title))*8),y);
        //}
    //}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
