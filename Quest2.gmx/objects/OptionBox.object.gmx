<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>AbstractTextBox</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//----[Event: create]----

//variables (width and height in units of 8x8 tiles)
width = 38;
height = 10;
depth = 0;
rawText = "COMMAND?";
title = "FIGHT ";
cursorPos = 0;

//fix height if it's odd
if(height%2 != 0){
    height += 1;
}
//start option arrays
for(var i=0; i&lt;((height-2)/2); i++){
    optionText[i] = "";
    optionIndex[i] = 0;
}

//constrain the box
// keep from going off the screen
if(((x/UI_TILE_SIZE) + width) &gt; SCREEN_WIDTH){
    width = SCREEN_WIDTH - (x/UI_TILE_SIZE);
}
if(((y/UI_TILE_SIZE) + height) &gt; SCREEN_HEIGHT){
    height = SCREEN_HEIGHT - (y/UI_TILE_SIZE);
}
// keep within normal bounds:
// - min width/height for an OptionBox is &lt;4,3&gt;
if(width &lt; 4){
    width = 4;
}
if(height &lt; 3){
    height = 3;
}
//constrain the title
if(string_length(title) &gt; (width-3)){
    title = string_copy(title, 0, width-3);
}
//*Startup animation goes here*
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_enter)){
    if(string_length(rawText) &gt; 0){
        if(fillLine &lt; displaysize){
            display[fillLine] = rbParse(id, rawText, width-2);
            fillLine += 1;
        }else{
            for(var i=0; i&lt;array_length_1d(display)-1; i++){
                display[i] = display[i+1];
            }
            fillLine -= 1;
            display[fillLine] = rbParse(id, rawText, width-2);
        }
    }else{
        //*Close animation goes here*
        instance_destroy();
    }
}
if(keyboard_check_pressed(vk_down)){
    if(cursorPos &lt; array_length_1d(optionText)-1){
        cursorPos += 1;
    }else{
        cursorPos = 0;
    }
}
if(keyboard_check_pressed(vk_up)){
    if(cursorPos &gt; 0){
        cursorPos -= 1;
    }else{
        cursorPos = array_length_1d(optionText)-1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
