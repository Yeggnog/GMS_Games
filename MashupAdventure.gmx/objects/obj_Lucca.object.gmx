<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Lucca_R</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set up

// movement
x_spd = 0;
y_spd = 0;
facing = 0;
run_spd = image_speed / 3;

// combat
shoot_decay = 0;
hit_flash = 0;
HP = 3;
maxHP = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// controls and updates

// ---- controls ----

if(key_up &amp;&amp; place_meeting(x,y+1,obj_Omni_Solid)){
    // hide
    if(hiding == false){
        hiding = true;
    }
    if(facing == 0){
        sprite_index = spr_Lucca_Hide_R;
    }else{
        sprite_index = spr_Lucca_Hide_L;
    }
}else{

// reset hiding
hiding = false;

// movement
if(key_left &amp;&amp; !key_right){
    // move left
    if(x_spd &lt; 4){
        x_spd = -4;
    }
    facing = 180;
}
if(key_right &amp;&amp; !key_left){
    // move right
    if(x_spd &lt; 4){
        x_spd = 4;
    }
    facing = 0;
}
if(!key_right &amp;&amp; !key_left){
    // stop
    x_spd = 0;
}
if(key_B){
    // jump
    if(place_meeting(x,y+1,obj_Omni_Solid)){
        y_spd -= 8;
        // sprite update
        if(facing == 0 &amp;&amp; sprite_index != spr_Lucca_Jump_R){
            sprite_index = spr_Lucca_Jump_R;
        }
        if(facing == 180 &amp;&amp; sprite_index != spr_Lucca_Jump_L){
            sprite_index = spr_Lucca_Jump_L;
        }
        image_speed = 0;
        image_index = 0;
    }
}

// combat
if(key_A &amp;&amp; shoot_decay == 0){
    // shoot
    shoot_decay = 8;
    var temp_id;
    if(facing == 0){
        temp_id = instance_create(x+16,y+2,obj_Omni_Bullet);
        temp_id.x_spd = 6;
    }else{
        temp_id = instance_create(x-16,y+2,obj_Omni_Bullet);
        temp_id.x_spd = -6;
    }
    temp_id.sprite_index = spr_Bullet_RNG;
    temp_id.dmg = 1;
    temp_id.ancestor = id;
    temp_id.system_id = part_system_RNG;
    temp_id.part_id = type_square;
}

}

// shot delay
if(shoot_decay &gt; 0){
    shoot_decay -= 1;
}

if(hit_flash &gt; 0){
    hit_flash -= 1;
}

// ---- collisions ----

// enemy bullets
if(place_meeting(x,y,obj_Omni_Bullet)){
    var othr = instance_place(x,y,obj_Omni_Bullet);
    if(othr.ancestor.object_index == obj_RNG_Enemy1 &amp;&amp; !hiding){
        // take damage
        HP -= 1;
        hit_flash = 30;
        // knockback
        if(facing == 0){
            x_spd = -2;
        }else{
            y_spd = 2;
        }
    }
}

// health pickups
if(place_meeting(x,y,obj_HP_RNG)){
    var ind = instance_place(x,y,obj_HP_RNG);
    if(HP &lt; maxHP){
        HP += 1;
    }
    with(ind){
        instance_destroy();
    }
}

// ---- updates ----

// gravity
if(!place_meeting(x,y+y_spd,obj_Omni_Solid) &amp;&amp; !place_meeting(x,y+1,obj_Omni_Solid)){
    if(y_spd &lt; 8){
        y_spd += 1;
    }
}else if(y_spd &gt; 0){
    y_spd = 0;
}

// collisions
while(place_meeting(x+x_spd,y,obj_Omni_Solid) &amp;&amp; x_spd != 0){
    if(x_spd &lt; 0){
        x_spd += 1;
    }
    if(x_spd &gt; 0){
        x_spd -= 1;
    }
}
if(place_meeting(x,y+y_spd,obj_Omni_Solid)){
    // land
    while(place_meeting(x,y+y_spd,obj_Omni_Solid) &amp;&amp; y_spd != 0){
        if(y_spd &lt; 0){
            y_spd += 1;
        }
        if(y_spd &gt; 0){
            y_spd -= 1;
        }
    }
    if(place_meeting(x,y+1,obj_Omni_Solid)){
        image_speed = 1;
        show_debug_message("I landed");
        // sprite update
        if(facing == 0 &amp;&amp; sprite_index != spr_Lucca_Land_R){
            sprite_index = spr_Lucca_Land_R;
        }
        if(facing == 180 &amp;&amp; sprite_index != spr_Lucca_Land_L){
            sprite_index = spr_Lucca_Land_L;
        }
    }
}

// move position
x += x_spd;
y += y_spd;

// push out
if(place_meeting(x,y,obj_Omni_Solid)){
    var othr = instance_place(x,y,obj_Omni_Solid);
    var dir = point_direction(othr.x+8,othr.y+8,x,y);
    x += round(lengthdir_x(2,dir));
    y += round(lengthdir_y(2,dir));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// sprite update
if(place_meeting(x,y+1,obj_Omni_Solid)){
    // grounded
    if(x_spd &gt; 0){
        // run right
        image_speed = run_spd;
        if(sprite_index != spr_Lucca_Run_R){
            sprite_index = spr_Lucca_Run_R;
        }
    }else if(x_spd &lt; 0){
        // run left
        image_speed = run_spd;
        if(sprite_index != spr_Lucca_Run_L){
            sprite_index = spr_Lucca_Run_L;
        }
    }else{
        // stand
        if(hiding){
            if(facing == 0){
                // hide right
                if(sprite_index != spr_Lucca_Hide_R){
                    sprite_index = spr_Lucca_Hide_R;
                }
            }else{
                // hide left
                if(sprite_index != spr_Lucca_Hide_L){
                    sprite_index = spr_Lucca_Hide_L;
                }
            }
        }else{
            if(facing == 0){
                // right
                if(sprite_index != spr_Lucca_R){
                    sprite_index = spr_Lucca_R;
                }
            }else{
                // left
                if(sprite_index != spr_Lucca_L){
                    sprite_index = spr_Lucca_L;
                }
            }
        }
    }
}else{
    // air
    if(facing == 0){
        // right
        if(sprite_index != spr_Lucca_Jump_R){
            sprite_index = spr_Lucca_Jump_R;
        }
    }else{
        // left
        if(sprite_index != spr_Lucca_Jump_L){
            sprite_index = spr_Lucca_Jump_L;
        }
    }
}

if(shoot_decay &gt; 0 &amp;&amp; !hiding){
    // shooting poses
    if(sprite_index == spr_Lucca_R){
        sprite_index = spr_Lucca_Shoot_R;
    }
    if(sprite_index == spr_Lucca_L){
        sprite_index = spr_Lucca_Shoot_L;
    }
    if(sprite_index == spr_Lucca_Jump_R){
        sprite_index = spr_Lucca_JumpS_R;
    }
    if(sprite_index == spr_Lucca_Jump_L){
        sprite_index = spr_Lucca_JumpS_L;
    }
    if(sprite_index == spr_Lucca_Run_R){
        saved_img = image_index;
        sprite_index = spr_Lucca_RunS_R;
        image_index = saved_img;
        saved_img = -1;
    }
    if(sprite_index == spr_Lucca_Run_L){
        saved_img = image_index;
        sprite_index = spr_Lucca_RunS_L;
        image_index = saved_img;
        saved_img = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index == spr_Lucca_Land_R){
    sprite_index = spr_Lucca_R;
}
if(sprite_index == spr_Lucca_Land_L){
    sprite_index = spr_Lucca_L;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UI and oneself

// draw UI
for(var i=0; i&lt;maxHP; i++){
    draw_sprite(spr_UI_RNG,0,view_xview[0]+1+(i*11),view_yview[0]+1);
}
for(var i=0; i&lt;HP; i++){
    draw_sprite(spr_UI_RNG,1,view_xview[0]+1+(i*11),view_yview[0]+1);
}
/*
if(obj_RNG_Control.HP_diff &gt; 0 &amp;&amp; obj_RNG_Control.HP &lt; obj_RNG_Control.max_HP){
    draw_sprite_part(spr_UI_RNG,2,0,0,4+(9*((obj_RNG_Control.HP+obj_RNG_Control.HP_diff)/obj_RNG_Control.max_HP)),9,view_xview[0]+1+(obj_RNG_Control.HP*11),view_yview[0]+1);
}
*/

// draw self
if(hit_flash == 30 || hit_flash == 29){
    shader_set(ColorMask);
    var col = shader_get_uniform(ColorMask,"in_Colour_actual");
    shader_set_uniform_f(col,255.0,255.0,255.0,1.0);
    draw_self();
    shader_reset();
}else if(hit_flash &gt; 0){
    draw_set_alpha(0.6);
    draw_self();
    draw_set_alpha(1.0);
}else{
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
