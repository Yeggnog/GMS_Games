<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ki_Hitbox_S</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Fight_Atk_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// set up stuff, init later
owner = -1;
side = 0;
dmg = 4;
knock = 1;
dir = 0;
spd = 3;
target = -1;
if(side == 0){
    if(instance_exists(obj_Enemy_Debug)){
        target = instance_nearest(x,y,obj_Enemy_Debug);
    }
}else{
    if(instance_exists(obj_Bazza)){
        target = instance_nearest(x,y,obj_Bazza);
    }
}
debug_block = "";
debug_sub_block = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// go on path
x += lengthdir_x(spd,dir);
y += lengthdir_y(spd,dir);
if(target != -1 &amp;&amp; instance_exists(target)){
    // home in
    var angl = point_direction(x,y,target.x,target.y);
    // it's amazing that this works
    if(angl &gt; 180){
        if(dir &gt; 180){
            // block A
debug_block = "A";
            if(dir &lt; angl){
                // subblock A
debug_sub_block = "A";
                dir += 4;
            }else if(dir &gt; angl){
                // subbblock B
debug_sub_block = "B";
                dir -= 4;
            }
        }else{
            // block B
debug_block = "B";
            var delta1 = abs(angl-dir);
            var delta2 = abs((angl-360)-dir);
            if(delta1 &lt; delta2){
                if(dir &lt; angl){
                    // subblock A
debug_sub_block = "A";
                    dir += 4;
                }else if(dir &gt; angl){
                    // subblock B
debug_sub_block = "B";
                    dir -= 4;
                }
            }else if(delta2 &lt; delta1){
                if(dir &gt; angl-360){
                    // subblock C
debug_sub_block = "C";
                    dir -= 4;
                }else if(dir &lt; angl-360){
                    // subbblock D
debug_sub_block = "D";
                    dir += 4;
                }
            }
        }
    }else{
        if(dir &lt; 180){
            // block C
debug_block = "C";
            if(dir &lt; angl){
                // subblock A
debug_sub_block = "A";
                dir += 4;
            }else if(dir &gt; angl){
                // subblock B
debug_sub_block = "B";
                dir -= 4;
            }
        }else{
            // dir &gt;= 180, angl &lt;= 180
            // block D
debug_block = "D";
            var opposite = dir-180;
            if(opposite &gt; angl){
                // subblock A
debug_sub_block = "A";
                dir += 4;
            }else{
                // subblock B
debug_sub_block = "B";
                dir -= 4;
            }
        }
    }
    if(dir &gt; 360){
        dir -= 360;
    }
    if(dir &lt; 0){
        dir += 360;
    }
}

// particles
//part_particles_create(part_system_Fight,x+random_range(-4,4),y+random_range(-4,4),type_ki_stat,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_kiBlast,0,x,y);
/*draw_set_color(c_black);
//draw_text(x-8,y-8,string(dir));
draw_text(x-8,y-8,string(debug_block)+string(debug_sub_block));
//draw_line(x,y,x+lengthdir_x(6,dir),y+lengthdir_y(6,dir));
draw_set_color(c_white);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
