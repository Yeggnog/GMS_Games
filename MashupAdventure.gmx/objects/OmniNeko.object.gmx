<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// I control LuckyNeko for the turns. Here.

// The Party
// Whether the party has taken a turn or not
party_turns[0] = false;
party_turns[1] = false;
party_turns[2] = false;
// Party's Stats
// Lucca                Avion                   Bazza
party_stats[0,0] = 150;   party_stats[1,0] = 200;   party_stats[2,0] = 150; // HP
party_stats[0,1] = 40;   party_stats[1,1] = 30;   party_stats[2,1] = 50; // Attack
party_stats[0,2] = 40;   party_stats[1,2] = 50;   party_stats[2,2] = 30; // Defense
party_stats[0,3] = 150;   party_stats[1,3] = 200;   party_stats[2,3] = 150; // Max HP

// The Enemy
// Whether the enemy has taken a turn or not
enemy_turns[0] = false;
// Enemy's HP
enemy_HP[0] = 2000; // Form 1
enemy_HP[1] = 8000; // Form 2

// Other variables
turn_delay = 60;
turn_delay_temp = 0;
whose_turn = 0;
after_turn_ping = false;
after_turn_id = -1;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up number 2

// Set up the blocks
for(var i=0; i&lt;6; i++){
    random_row_neko();
}
show_debug_message("Battle Start");
show_debug_message("Player Turn");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// THINGS. I'M BAD AT NAMING THEM.

// update turns
if(after_turn_ping){
    after_turn_ping = false;
    if(after_turn_id != -1){
        if(whose_turn == 0){
            party_turns[after_turn_id] = true;
            var flag = false;
            for(var i=0; i&lt;array_length_1d(party_turns); i++){
                if(!party_turns[i]){
                    flag = true;
                }
            }
            if(!flag){
                // go to the next turn
                whose_turn = 1;
show_debug_message("Enemy Turn");
                for(var i=0; i&lt;array_length_1d(enemy_turns); i++){
                    enemy_turns = false;
                }
            }
        }else{
            enemy_turns[after_turn_id] = true;
            var flag = false;
            for(var i=0; i&lt;array_length_1d(enemy_turns); i++){
                if(!enemy_turns[i]){
                    flag = true;
                }
            }
            if(!flag){
                // go to the next turn
                whose_turn = 0;
show_debug_message("Player Turn");
                for(var i=0; i&lt;array_length_1d(party_turns); i++){
                    party_turns = false;
                }
            }
        }
        after_turn_id = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
