<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set up the grid and other such things

// start the grid empty
for(var i=0; i&lt;6; i++){
    for(var j=0; j&lt;8; j++){
        grid_obj[i,j] = -1;
        grid_tile[i,j] = -1;
    }
}

// variables
units = ds_list_create();
selecting = true;
curs_x = 0;
curs_y = 0;
frame_id = 0;
frame_id_temp = 0;
frame_id_temp_inc = 0.5;

// add tiles

// ship
grid_tile[0,1] = 5;
grid_tile[0,2] = 6;
grid_tile[1,1] = 7;
grid_tile[1,2] = 8;
// portal
grid_tile[5,7] = 4;

// add objects

// player
var ind = instance_create(32,16,obj_TBS_Unit);
ind.type = "player";
ind.xpos = 2;
ind.ypos = 1;
ind.HP = 25;
ind.atk = 4;
ds_list_add(units,ind);
grid_obj[1,2] = ind;
// enemies
for(var i=0; i&lt;4; i++){
    var tempx = grid_obj[1,2].xpos;
    var tempy = grid_obj[1,2].ypos;
    while(!grid_empty_at(tempx,tempy)){
        tempx = irandom_range(0,7);
        tempy = irandom_range(0,5);
    }
    var temp = instance_create(tempx*16,tempy*16,obj_TBS_Unit);
    temp.xpos = tempx;
    temp.ypos = tempy;
    ds_list_add(units,temp);
    grid_obj[tempy,tempx] = temp;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// use this when the game ends to prevent memory leaks
ds_list_destroy(units);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update animation
if(frame_id_temp &lt; 1){
    frame_id_temp += frame_id_temp_inc;
}else if(frame_id &lt; 2){
    frame_id += 1;
    frame_id_temp = 0;
}else{
    frame_id = 0;
    frame_id_temp = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// tiles and such

// background
draw_sprite(spr_BG_Space,0,view_xview[0],view_yview[0]);

// tiles


// grid (if selecting)
draw_sprite_tiled(spr_Tiles_TBS,9,view_xview[0],view_yview[0]);

// units
for(var i=0; i&lt;array_height_2d(grid_obj); i++){
    for(var j=0; j&lt;array_length_2d(grid_obj,i); j++){
        if(grid_obj[i,j] != -1){
            var temp = grid_obj[i,j];
            if(temp.type == "player"){
                if(temp.facing == 0){ // 11, 12, 13
                    draw_sprite(spr_Map_TBS,11+frame_id,temp.xpos*16,temp.ypos*16);
                }else{ // 8, 9, 10
                    draw_sprite(spr_Map_TBS,8+frame_id,temp.xpos*16,temp.ypos*16);
                }
            }else if(temp.type == "enemy"){
                if(temp.facing == 0){ // 5, 6, 7
                    draw_sprite(spr_Map_TBS,5+frame_id,temp.xpos*16,temp.ypos*16);
                }else{ // 2, 3, 4
                    draw_sprite(spr_Map_TBS,2+frame_id,temp.xpos*16,temp.ypos*16);
                }
            }
        }
    }
}

// cursor (if selecting)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
