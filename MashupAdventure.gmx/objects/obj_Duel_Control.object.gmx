<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set up

// particle system
globalvar part_system_Fight;
part_system_Fight = part_system_create();

// ki bits
globalvar type_ki;
type_ki = part_type_create();
part_type_life(type_ki,30,32);
part_type_colour_rgb(type_ki,0,0,128,128,192,192);
part_type_shape(type_ki,pt_shape_square);
part_type_size(type_ki,0.02,0.05,-0.01,0.0);
part_type_speed(type_ki,2,2,0,0);
part_type_orientation(type_ki,45,135,10,0,false);
part_type_direction(type_ki,90,90,0,0);

// stationary ki bits
globalvar type_ki_stat;
type_ki_stat = part_type_create();
part_type_life(type_ki_stat,30,32);
part_type_colour_rgb(type_ki_stat,0,0,128,128,192,192);
part_type_shape(type_ki_stat,pt_shape_square);
part_type_size(type_ki_stat,0.02,0.05,-0.01,0.0);
part_type_orientation(type_ki_stat,45,135,10,0,false);

// landing dust
globalvar type_land_L;
type_land_L = part_type_create();
part_type_life(type_land_L,15,16);
part_type_colour_rgb(type_land_L,255,255,255,255,255,255);
part_type_shape(type_land_L,pt_shape_square);
part_type_size(type_land_L,0.02,0.05,0,0);
part_type_speed(type_land_L,2,4,-.05,0);
part_type_orientation(type_land_L,45,135,10,0,false);
part_type_direction(type_land_L,150,180,0,0);

globalvar type_land_R;
type_land_R = part_type_create();
part_type_life(type_land_R,15,16);
part_type_colour_rgb(type_land_R,255,255,255,255,255,255);
part_type_shape(type_land_R,pt_shape_square);
part_type_size(type_land_R,0.02,0.05,0,0);
part_type_speed(type_land_R,2,4,-.05,0);
part_type_orientation(type_land_R,45,135,10,0,false);
part_type_direction(type_land_R,0,30,0,0);

// physical hit burst
globalvar type_hit;
type_hit = part_type_create();
part_type_life(type_hit,3,3);
part_type_sprite(type_hit,spr_Particles_Fight,true,false,false);

// clash effects


// UI
fnt_Fight = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw BG
draw_sprite(spr_BG_Castle,0,view_xview[0],view_yview[0]);
draw_sprite(spr_BG_Castle,1,0,16);
draw_sprite(spr_BG_Castle,1,128,16);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
