<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>optiontext[0] = "CONTINUE";
optiontext[1] = "QUIT";
curs_pos = 0;
offset = 0;
alphy = 0.0;
fade_done = false;
anim_done = false;
img = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// keyboard input
if(offset == 0 &amp;&amp; anim_done){
if(key_up_pressed){
    if(curs_pos &gt; 0){
        curs_pos -= 1;
    }else{
        curs_pos = 1;
    }
    offset = 14;
}
if(key_down_pressed){
    if(curs_pos &lt; 1){
        curs_pos += 1;
    }else{
        curs_pos = 0;
    }
    offset = -14;
}
if(key_A){
    var temmie = instance_create(0,0,obj_ScreenTransition);
    if(curs_pos == 0){
        // restart the level
        temmie.nextRoom = room;
    }
    if(curs_pos == 1){
        // go back to the title screen
        temmie.nextRoom = rm_Minigame_PointNClick;
    }
}
}

// update offset
if(offset &lt; 0){
    offset += 2;
}
if(offset &gt; 0){
    offset -= 2;
}

// update alphy
if(alphy &lt; 1.0){
    alphy += 0.02;
}else if(!fade_done){
    fade_done = true;
}else{
    if(img &lt; 68 &amp;&amp; !anim_done){
        img += 0.5;
    }else if(fade_done &amp;&amp; !anim_done){
        anim_done = true;
        img = 63;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(alphy &lt; 1.0){
// fade
draw_set_color(make_color_rgb(32,32,32));
draw_set_alpha(alphy);
draw_rectangle(view_xview[0],view_yview[0],view_xview[0]+view_wview[0],view_yview[0]+view_hview[0],false);
draw_set_alpha(1.0);
draw_set_color(c_black);
}

if(alphy == 1.0){
// splash screen
draw_sprite(spr_GameOverSplash,floor(img),view_xview[0],view_yview[0]);
}

if(anim_done){
// font
var fnt = font_add_sprite(spr_PNC_Font,ord(' '),false,0);
draw_set_font(fnt);

// draw 'cursor'
draw_set_color(make_color_rgb(0,128,192));
draw_set_alpha(0.5);
draw_rectangle(view_xview[0],view_yview[0]+49+(12*curs_pos)+offset,view_xview[0]+view_wview[0],view_yview[0]+59+(12*curs_pos)+offset,false);
draw_set_alpha(1.0);
draw_set_color(c_black);

// draw options
draw_set_color(c_white);
for(var i=0; i&lt;array_length_1d(optiontext); i++){
    draw_text(view_xview[0]+floor((view_wview[0]/2)-(string_width(optiontext[i])/2)),view_yview[0]+50+(12*i),optiontext[i]);
}
draw_set_color(c_black);

// clear up memory
font_delete(fnt);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
