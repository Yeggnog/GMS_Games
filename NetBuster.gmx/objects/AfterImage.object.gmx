<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//instance variables

ref_id = 0;
ref_image = 0;
ref_color_r = 0;
ref_color_g = 0;
ref_color_b = 0;
/*ref_color_r = 0;
ref_color_g = 232;
ref_color_b = 0;*/

lifespan = 5;
elapsed_time = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(elapsed_time &lt; lifespan){
    depth = elapsed_time;
    elapsed_time += 1;
}else{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//tests
var temp_r = ref_color_r;
//if(ref_color_r - (50*elapsed_time) &lt; 0){
    //temp_r = 0;
//}else{
    //temp_r = ref_color_r - (50*elapsed_time);
//}

var temp_g = ref_color_g;
//if(ref_color_g - (50*elapsed_time) &lt; 0){
    //temp_g = 0;
//}else{
    //temp_g = ref_color_g - (50*elapsed_time);
//}

var temp_b = ref_color_b;
//if(ref_color_b - (50*elapsed_time) &lt; 0){
    //temp_b = 0;
//}else{
    //temp_b = ref_color_b - (50*elapsed_time);
//}

//drawing
d3d_start();
d3d_set_fog(true,make_color_rgb(temp_r,temp_g,temp_b),0,1);
draw_set_alpha(1.0-(elapsed_time/lifespan));
draw_sprite(Navi.sprite_index,ref_image,x,y);
draw_set_alpha(1.0);
d3d_set_fog(false,c_black,0,1);
d3d_end();
//draw_sprite_ext(Navi.sprite_index,ref_image,x,y,1,1,0,make_color_rgb(temp_r,temp_g,temp_b),1.0-(elapsed_time/lifespan));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
